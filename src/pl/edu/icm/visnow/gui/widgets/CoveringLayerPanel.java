//<editor-fold defaultstate="collapsed" desc=" COPYRIGHT AND LICENSE ">
/* VisNow
 Copyright (C) 2006-2013 University of Warsaw, ICM

 This file is part of GNU Classpath.

 GNU Classpath is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2, or (at your option)
 any later version.

 GNU Classpath is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with GNU Classpath; see the file COPYING.  If not, write to the
 University of Warsaw, Interdisciplinary Centre for Mathematical and
 Computational Modelling, Pawinskiego 5a, 02-106 Warsaw, Poland.

 Linking this library statically or dynamically with other modules is
 making a combined work based on this library.  Thus, the terms and
 conditions of the GNU General Public License cover the whole
 combination.

 As a special exception, the copyright holders of this library give you
 permission to link this library with independent modules to produce an
 executable, regardless of the license terms of these independent
 modules, and to copy and distribute the resulting executable under
 terms of your choice, provided that you also meet, for each linked
 independent module, the terms and conditions of the license of that
 module.  An independent module is a module which is not derived from
 or based on this library.  If you modify this library, you may extend
 this exception to your version of the library, but you are not
 obligated to do so.  If you do not wish to do so, delete this
 exception statement from your version. */
//</editor-fold>
package pl.edu.icm.visnow.gui.widgets;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseMotionAdapter;
import javax.swing.BorderFactory;
//import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
//import javax.swing.WindowConstants;
//import org.apache.log4j.Logger;
import org.jdesktop.swingx.JXPanel;
import pl.edu.icm.visnow.lib.templates.visualization.guis.Field1dVisualizationGUI;
import pl.edu.icm.visnow.lib.templates.visualization.guis.FieldVisualizationGUI;
import pl.edu.icm.visnow.lib.templates.visualization.guis.IrregularField1dVisualizationGUI;
import pl.edu.icm.visnow.lib.templates.visualization.guis.IrregularFieldVisualizationGUI;
import pl.edu.icm.visnow.lib.templates.visualization.guis.RegularFieldVisualizationGUI;

/**
 *
 * @author know
 */
public class CoveringLayerPanel extends javax.swing.JPanel
{
//    private static final Logger LOGGER = Logger.getLogger(CoveringLayerPanel.class);
    private Component contentGUI = null;
            
    /**
    * Creates new form CoveringLayerPanel
    */
   public CoveringLayerPanel()
   {
      initComponents();     
      
      overlayXPanel.addMouseListener(new MouseAdapter() {});      
      overlayXPanel.addMouseMotionListener(new MouseMotionAdapter() {});
      overlayXPanel.addKeyListener(new KeyAdapter() {});
          
      //TODO: alpha/background - make it dependent on L&F colors & L&F disabled mask
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        layeredPane = new JLayeredPane();
        labelPanel = new JPanel();
        messageLabel = new JLabel();
        overlayXPanel = new JXPanel();
        contentPanel = new JPanel();

        addComponentListener(new ComponentAdapter() {
            public void componentResized(ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        setLayout(new BorderLayout());

        layeredPane.setLayout(new GridBagLayout());

        labelPanel.setBackground(new Color(255, 255, 255));
        labelPanel.setBorder(BorderFactory.createLineBorder(new Color(187, 187, 187)));
        labelPanel.setName(""); // NOI18N
        labelPanel.setLayout(new BorderLayout());

        messageLabel.setHorizontalAlignment(SwingConstants.CENTER);
        messageLabel.setText("  ");
        labelPanel.add(messageLabel, BorderLayout.CENTER);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 80;
        gridBagConstraints.anchor = GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(30, 30, 30, 30);
        layeredPane.add(labelPanel, gridBagConstraints);

        overlayXPanel.setBackground(new Color(237, 237, 237));
        overlayXPanel.setAlpha(0.45454544F);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        layeredPane.add(overlayXPanel, gridBagConstraints);

        contentPanel.setLayout(new BorderLayout());
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        layeredPane.add(contentPanel, gridBagConstraints);

        add(layeredPane, BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

   private void formComponentResized(ComponentEvent evt)//GEN-FIRST:event_formComponentResized
   {//GEN-HEADEREND:event_formComponentResized
   }//GEN-LAST:event_formComponentResized

   
   /**
    * @return true if containing panel is any type of field visualization panel
    */
    public boolean isFieldVisualisationGUI() {
        //FIXME: this is temporal solution - in release 1.2 should be only FieldVisualisationGUI and GeneralModuleGUI (or sth like this)
        //GeneralModuleGUI should be used for non-field-visualisation modules??
//        LOGGER.debug(contentGUI);
        return (contentGUI != null
                && (contentGUI instanceof RegularFieldVisualizationGUI
                || contentGUI instanceof IrregularFieldVisualizationGUI
                || contentGUI instanceof IrregularField1dVisualizationGUI
                || contentGUI instanceof Field1dVisualizationGUI
                || contentGUI instanceof FieldVisualizationGUI));
    }
   
   public void addContent(Component c)
   {
       contentGUI = c;
       contentPanel.add(c, BorderLayout.CENTER);
      revalidate();
   }

   public void setText(String text)
   {
      messageLabel.setText(text);
   }
   
   public void overlay(boolean over)
   {
      overlayXPanel.setVisible(over);
      labelPanel.setVisible(over);
   }
   
   public void overlay(String text)
   {
      messageLabel.setText(text);
      overlayXPanel.setVisible(true);
      labelPanel.setVisible(true);
      
      layeredPane.repaint();
   }
   
   public void setAlpha(float a)
   {
      overlayXPanel.setAlpha(a);
      repaint();
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel contentPanel;
    private JPanel labelPanel;
    private JLayeredPane layeredPane;
    private JLabel messageLabel;
    private JXPanel overlayXPanel;
    // End of variables declaration//GEN-END:variables

//    public static void main(String[] args) {
//        JFrame f = new JFrame();
//        f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
//        f.add(new CoveringLayerPanel());
//        f.setSize(300,500);
//        f.setVisible(true);        
//    }
}
