/* VisNow
   Copyright (C) 2006-2013 University of Warsaw, ICM

This file is part of GNU Classpath.

GNU Classpath is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU Classpath is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Classpath; see the file COPYING.  If not, write to the 
University of Warsaw, Interdisciplinary Centre for Mathematical and 
Computational Modelling, Pawinskiego 5a, 02-106 Warsaw, Poland. 

Linking this library statically or dynamically with other modules is
making a combined work based on this library.  Thus, the terms and
conditions of the GNU General Public License cover the whole
combination.

As a special exception, the copyright holders of this library give you
permission to link this library with independent modules to produce an
executable, regardless of the license terms of these independent
modules, and to copy and distribute the resulting executable under
terms of your choice, provided that you also meet, for each linked
independent module, the terms and conditions of the license of that
module.  An independent module is a module which is not derived from
or based on this library.  If you modify this library, you may extend
this exception to your version of the library, but you are not
obligated to do so.  If you do not wish to do so, delete this
exception statement from your version. */

package pl.edu.icm.visnow.geometries.viewer3d.controls;

import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JFrame;
import pl.edu.icm.visnow.geometries.parameters.AbstractRenderingParams;
import pl.edu.icm.visnow.geometries.viewer3d.Display3DPanel;
import pl.edu.icm.visnow.geometries.viewer3d.Title;

/**
 *
 * @author  Krzysztof S. Nowinski, University of Warsaw, ICM
 */
public class TitleEditorPanel extends javax.swing.JPanel
{
   protected JFrame parent = null;
   protected Display3DPanel panel = null; 
   private AbstractRenderingParams params;
   private ArrayList<Title> titles = new ArrayList<Title>();
   private Title currentTitle = new Title(" ", new Font("Dialog",0,12), 
                                          12, Color.WHITE, Title.CENTER, .1f);;
   private Vector<String> titleTexts = new Vector<String>();
   
   /** Creates new form TitleEditorPanel */
   @SuppressWarnings("unchecked")
   public TitleEditorPanel()
   {
      initComponents();

      Toolkit toolkit = Toolkit.getDefaultToolkit();
   }
   
   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents()
   {
      java.awt.GridBagConstraints gridBagConstraints;

      buttonGroup1 = new javax.swing.ButtonGroup();
      jPanel1 = new javax.swing.JPanel();
      jScrollPane3 = new javax.swing.JScrollPane();
      titleList = new javax.swing.JList();
      addButton = new javax.swing.JButton();
      delButton = new javax.swing.JButton();
      jPanel5 = new javax.swing.JPanel();
      titleField = new javax.swing.JTextField();
      jPanel6 = new javax.swing.JPanel();
      italicCheckbox = new javax.swing.JCheckBox();
      boldCheckbox = new javax.swing.JCheckBox();
      colorEditor = new pl.edu.icm.visnow.gui.widgets.ColorEditor();
      fontSizeSlider = new pl.edu.icm.visnow.gui.widgets.FloatSlider();
      fontComboBox = new pl.edu.icm.visnow.gui.widgets.FontComboBox();
      jPanel7 = new javax.swing.JPanel();
      ySlider = new javax.swing.JSlider();
      jPanel2 = new javax.swing.JPanel();
      leftButton = new javax.swing.JRadioButton();
      centerButton = new javax.swing.JRadioButton();
      rightButton = new javax.swing.JRadioButton();

      setMinimumSize(new java.awt.Dimension(650, 290));
      setOpaque(false);
      setPreferredSize(new java.awt.Dimension(660, 300));
      setLayout(new java.awt.GridBagLayout());

      jPanel1.setMinimumSize(new java.awt.Dimension(150, 200));
      jPanel1.setPreferredSize(new java.awt.Dimension(150, 300));
      jPanel1.setLayout(new java.awt.GridBagLayout());

      jScrollPane3.setMinimumSize(new java.awt.Dimension(140, 100));
      jScrollPane3.setPreferredSize(new java.awt.Dimension(160, 131));

      titleList.addListSelectionListener(new javax.swing.event.ListSelectionListener()
      {
         public void valueChanged(javax.swing.event.ListSelectionEvent evt)
         {
            titleListValueChanged(evt);
         }
      });
      jScrollPane3.setViewportView(titleList);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 0;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.weightx = 0.5;
      gridBagConstraints.weighty = 1.0;
      jPanel1.add(jScrollPane3, gridBagConstraints);

      addButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      addButton.setText("add");
      addButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            addButtonActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.weightx = 1.0;
      jPanel1.add(addButton, gridBagConstraints);

      delButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      delButton.setText("delete");
      delButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
      delButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            delButtonActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.weightx = 1.0;
      jPanel1.add(delButton, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridheight = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.weighty = 1.0;
      add(jPanel1, gridBagConstraints);

      jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "content", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
      jPanel5.setLayout(new java.awt.BorderLayout());

      titleField.setText("title");
      titleField.setMinimumSize(new java.awt.Dimension(100, 22));
      titleField.setPreferredSize(new java.awt.Dimension(100, 22));
      titleField.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            titleFieldActionPerformed(evt);
         }
      });
      jPanel5.add(titleField, java.awt.BorderLayout.CENTER);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      add(jPanel5, gridBagConstraints);

      jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "appearance", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
      jPanel6.setMinimumSize(new java.awt.Dimension(220, 167));
      jPanel6.setLayout(new java.awt.GridBagLayout());

      italicCheckbox.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      italicCheckbox.setText("italic");
      italicCheckbox.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            italicCheckboxActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 2;
      jPanel6.add(italicCheckbox, gridBagConstraints);

      boldCheckbox.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      boldCheckbox.setText("bold");
      boldCheckbox.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            boldCheckboxActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 2;
      jPanel6.add(boldCheckbox, gridBagConstraints);

      colorEditor.addChangeListener(new javax.swing.event.ChangeListener()
      {
         public void stateChanged(javax.swing.event.ChangeEvent evt)
         {
            colorEditorStateChanged(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 3;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      jPanel6.add(colorEditor, gridBagConstraints);

      fontSizeSlider.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "font height (% of window height)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
      fontSizeSlider.setMax(5.0F);
      fontSizeSlider.setMin(0.2F);
      fontSizeSlider.setMinimumSize(new java.awt.Dimension(90, 63));
      fontSizeSlider.setPreferredSize(new java.awt.Dimension(200, 65));
      fontSizeSlider.setVal(3.0F);
      fontSizeSlider.addChangeListener(new javax.swing.event.ChangeListener()
      {
         public void stateChanged(javax.swing.event.ChangeEvent evt)
         {
            fontSizeSliderStateChanged(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      jPanel6.add(fontSizeSlider, gridBagConstraints);

      fontComboBox.addItemListener(new java.awt.event.ItemListener()
      {
         public void itemStateChanged(java.awt.event.ItemEvent evt)
         {
            fontComboBoxItemStateChanged(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.weightx = 1.0;
      jPanel6.add(fontComboBox, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 3;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.weightx = 1.0;
      add(jPanel6, gridBagConstraints);

      jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "position", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
      jPanel7.setLayout(new java.awt.GridBagLayout());

      ySlider.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
      ySlider.setMajorTickSpacing(20);
      ySlider.setMinorTickSpacing(2);
      ySlider.setPaintLabels(true);
      ySlider.setPaintTicks(true);
      ySlider.setValue(5);
      ySlider.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "y position (in % of height)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
      ySlider.addChangeListener(new javax.swing.event.ChangeListener()
      {
         public void stateChanged(javax.swing.event.ChangeEvent evt)
         {
            ySliderStateChanged(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.weightx = 1.0;
      jPanel7.add(ySlider, gridBagConstraints);

      jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "horizontal", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
      jPanel2.setLayout(new java.awt.GridLayout(1, 0));

      buttonGroup1.add(leftButton);
      leftButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      leftButton.setText("left");
      leftButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            leftButtonActionPerformed(evt);
         }
      });
      jPanel2.add(leftButton);

      buttonGroup1.add(centerButton);
      centerButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      centerButton.setSelected(true);
      centerButton.setText("center");
      centerButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            centerButtonActionPerformed(evt);
         }
      });
      jPanel2.add(centerButton);

      buttonGroup1.add(rightButton);
      rightButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      rightButton.setText("right");
      rightButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            rightButtonActionPerformed(evt);
         }
      });
      jPanel2.add(rightButton);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      jPanel7.add(jPanel2, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 4;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      add(jPanel7, gridBagConstraints);
   }// </editor-fold>//GEN-END:initComponents

   private void boldCheckboxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_boldCheckboxActionPerformed
   {//GEN-HEADEREND:event_boldCheckboxActionPerformed
      updateFont();
      update3DWindow();
   }//GEN-LAST:event_boldCheckboxActionPerformed

   private void italicCheckboxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_italicCheckboxActionPerformed
   {//GEN-HEADEREND:event_italicCheckboxActionPerformed
      updateFont();
      update3DWindow();
   }//GEN-LAST:event_italicCheckboxActionPerformed

   private void colorEditorStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_colorEditorStateChanged
   {//GEN-HEADEREND:event_colorEditorStateChanged
      currentTitle.setColor(colorEditor.getColor());
      if (!colorEditor.isAdjusting())
         update3DWindow();
   }//GEN-LAST:event_colorEditorStateChanged

   private void setHorizontalPos()
   {
      if (leftButton.isSelected())   currentTitle.setHorizontalPosition(Title.LEFT);
      if (centerButton.isSelected()) currentTitle.setHorizontalPosition(Title.CENTER);
      if (rightButton.isSelected())  currentTitle.setHorizontalPosition(Title.RIGHT);      
      update3DWindow();
   }
   
   private void addButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addButtonActionPerformed
   {//GEN-HEADEREND:event_addButtonActionPerformed
      int hPos = Title.CENTER;
      if (leftButton.isSelected())   hPos = Title.LEFT;
      if (rightButton.isSelected())  hPos = Title.RIGHT;
      currentTitle = new Title(titleField.getText(), 
                               new Font((String)fontComboBox.getSelectedItem(),0,12), 
                               fontSizeSlider.getVal() / 100.f, colorEditor.getColor(), 
                               hPos, ySlider.getValue() / 100.f);
      titles.add(currentTitle);  
      updateTitleList();   
      update3DWindow();
   }//GEN-LAST:event_addButtonActionPerformed

   private void titleFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_titleFieldActionPerformed
   {//GEN-HEADEREND:event_titleFieldActionPerformed
      currentTitle.setTitle(titleField.getText());
      updateTitleList();   
      update3DWindow();
   }//GEN-LAST:event_titleFieldActionPerformed

   private void delButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_delButtonActionPerformed
   {//GEN-HEADEREND:event_delButtonActionPerformed
      int k = titleList.getSelectedIndex();
      if (k >= 0 && k < titles.size())
         titles.remove(k);   
      update3DWindow();
   }//GEN-LAST:event_delButtonActionPerformed

   private void leftButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_leftButtonActionPerformed
   {//GEN-HEADEREND:event_leftButtonActionPerformed
      setHorizontalPos();
   }//GEN-LAST:event_leftButtonActionPerformed

   private void centerButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_centerButtonActionPerformed
   {//GEN-HEADEREND:event_centerButtonActionPerformed
      setHorizontalPos();
   }//GEN-LAST:event_centerButtonActionPerformed

   private void rightButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rightButtonActionPerformed
   {//GEN-HEADEREND:event_rightButtonActionPerformed
      setHorizontalPos();
   }//GEN-LAST:event_rightButtonActionPerformed

   private void fontSizeSliderStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_fontSizeSliderStateChanged
   {//GEN-HEADEREND:event_fontSizeSliderStateChanged
      if (fontSizeSlider.isAdjusting())
         return;
      currentTitle.setFontHeight(fontSizeSlider.getVal() / 100.f);
      update3DWindow();
   }//GEN-LAST:event_fontSizeSliderStateChanged

   private void titleListValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_titleListValueChanged
   {//GEN-HEADEREND:event_titleListValueChanged
      int k = titleList.getSelectedIndex();
      if (k >= 0 && k < titles.size())
         currentTitle = titles.get(k);
      updateCurrentTitleUI();
   }//GEN-LAST:event_titleListValueChanged

   private void ySliderStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_ySliderStateChanged
   {//GEN-HEADEREND:event_ySliderStateChanged
      if (ySlider.getValueIsAdjusting())
         return;
      currentTitle.setVerticalPosition(ySlider.getValue() / 100.f);
      update3DWindow();
   }//GEN-LAST:event_ySliderStateChanged

   private void fontComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_fontComboBoxItemStateChanged
   {//GEN-HEADEREND:event_fontComboBoxItemStateChanged
      updateFont();
      update3DWindow();
   }//GEN-LAST:event_fontComboBoxItemStateChanged
   
   private void updateCurrentTitleUI()
   {
      int k = titleList.getSelectedIndex();
      if (k >= 0 && k < titles.size())
      {
         currentTitle = titles.get(k);
         titleField.setText(currentTitle.getTitle());
         colorEditor.setColor(currentTitle.getColor());
         fontSizeSlider.setValue(currentTitle.getFontHeight(), true);
         Font cFont = currentTitle.getFont();
         italicCheckbox.setSelected((cFont.getStyle() & Font.ITALIC) != 0);
         boldCheckbox.setSelected((cFont.getStyle() & Font.BOLD) != 0);
         switch (currentTitle.getHorizontalPosition())
         {
            case Title.CENTER:
               centerButton.setSelected(true);
               break;
            case Title.LEFT:
               leftButton.setSelected(true);
               break;
            case Title.RIGHT:
               rightButton.setSelected(true);
               break;
         }
         ySlider.setValue((int)(100 * currentTitle.getVerticalPosition()));
      }
   }
   
   private void updateTitleList()
   {
      titleTexts.clear();
      for (int i = 0; i < titles.size(); i++)
         titleTexts.add(titles.get(i).getTitle());
      titleList.setListData(titleTexts);
   }
   
   private void updateBackground(Color color)
   {
      titleField.setBackground(color);
   }
   
   protected void updateFont()
   {
      int style = 0;
      if (italicCheckbox.isSelected()) style |= Font.ITALIC;
      if (boldCheckbox.isSelected())   style |= Font.BOLD;
      currentTitle.setFont(new Font((String)fontComboBox.getSelectedItem(),style,12));
      titleField.setFont(currentTitle.getFont());
   }
   
   private void update3DWindow()
   {
      if (panel != null)
      {
         panel.setTitles(titles); 
         panel.forceRender();
      }
   }
   
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton addButton;
   private javax.swing.JCheckBox boldCheckbox;
   private javax.swing.ButtonGroup buttonGroup1;
   private javax.swing.JRadioButton centerButton;
   private pl.edu.icm.visnow.gui.widgets.ColorEditor colorEditor;
   private javax.swing.JButton delButton;
   private pl.edu.icm.visnow.gui.widgets.FontComboBox fontComboBox;
   private pl.edu.icm.visnow.gui.widgets.FloatSlider fontSizeSlider;
   private javax.swing.JCheckBox italicCheckbox;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JPanel jPanel2;
   private javax.swing.JPanel jPanel5;
   private javax.swing.JPanel jPanel6;
   private javax.swing.JPanel jPanel7;
   private javax.swing.JScrollPane jScrollPane3;
   private javax.swing.JRadioButton leftButton;
   private javax.swing.JRadioButton rightButton;
   private javax.swing.JTextField titleField;
   private javax.swing.JList titleList;
   private javax.swing.JSlider ySlider;
   // End of variables declaration//GEN-END:variables

   /**
    * Getter for property selectedFontName.
    * @return Value of property selectedFontName.
    */
   public String getSelectedFontName()
   {
      return currentTitle.getFont().getFontName();
   }

   /**
    * Getter for property selectedItalic.
    * @return Value of property selectedItalic.
    */
   public boolean isSelectedItalic()
   {
      return currentTitle.getFont().isItalic();
   }

   /**
    * Getter for property selectedBold.
    * @return Value of property selectedBold.
    */
   public boolean isSelectedBold()
   {
      return currentTitle.getFont().isBold();
   }


   /**
    * Getter for property selectedFont.
    * @return Value of property selectedFont.
    */
   public Font getSelectedFont()
   {
      return currentTitle.getFont();
   }

   public void setSelectedFont(Font selectedFont)
   {
      currentTitle.setFont(selectedFont);
      updateCurrentTitleUI();
   }
   /**
    * Getter for property selectedColor.
    * @return Value of property selectedColor.
    */
   public Color getSelectedColor()
   {

      return currentTitle.getColor();
   }

   /**
    * Setter for property selectedColor.
    * @param selectedColor New value of property selectedColor.
    */
   public void setSelectedColor(Color selectedColor)
   {
      currentTitle.setColor(selectedColor);
      updateCurrentTitleUI();
   }

   /**
    * Setter for property bgrColor.
    * @param bgrColor New value of property bgrColor.
    */
   public void setBgrColor(Color bgrColor)
   {

     titleField.setBackground(bgrColor);
   }
   
   public void setPanel(Display3DPanel panel)
   {
      this.panel = panel;
   }
   
   public void setParentDialog(JFrame parent)
   {
      this.parent = parent;
   }


   public void setParams(AbstractRenderingParams params)
   {
      this.params = params;
      setSelectedFont(params.getAnnoFont());
      setSelectedColor(params.getAnnoColor());
   }
}
