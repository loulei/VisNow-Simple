//<editor-fold defaultstate="collapsed" desc=" COPYRIGHT AND LICENSE ">
/* VisNow
   Copyright (C) 2006-2013 University of Warsaw, ICM

This file is part of GNU Classpath.

GNU Classpath is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU Classpath is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Classpath; see the file COPYING.  If not, write to the
University of Warsaw, Interdisciplinary Centre for Mathematical and
Computational Modelling, Pawinskiego 5a, 02-106 Warsaw, Poland.

Linking this library statically or dynamically with other modules is
making a combined work based on this library.  Thus, the terms and
conditions of the GNU General Public License cover the whole
combination.

As a special exception, the copyright holders of this library give you
permission to link this library with independent modules to produce an
executable, regardless of the license terms of these independent
modules, and to copy and distribute the resulting executable under
terms of your choice, provided that you also meet, for each linked
independent module, the terms and conditions of the license of that
module.  An independent module is a module which is not derived from
or based on this library.  If you modify this library, you may extend
this exception to your version of the library, but you are not
obligated to do so.  If you do not wish to do so, delete this
exception statement from your version. */
//</editor-fold>


package pl.edu.icm.visnow.system.config;

import java.util.Hashtable;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import pl.edu.icm.visnow.system.main.VisNow;

/**
 *
 * @author babor
 */
public class PropertiesEditorPanel extends javax.swing.JPanel
{
   private Hashtable<Integer, JLabel> labels = new Hashtable<Integer, JLabel>();
   /**
    * Creates new form PropertiesEditorPanel
    */
   public PropertiesEditorPanel()
   {
      initComponents();
   }

   public void init()
   {
      JLabel lowEndLabel = new JLabel("low end");
      lowEndLabel.setFont(performanceSlider.getFont());
      labels.put(0, lowEndLabel);
      JLabel stdLabel = new JLabel("standard");
      stdLabel.setFont(performanceSlider.getFont());
      labels.put(2, stdLabel);
      JLabel xtrLabel = new JLabel("extreme");
      xtrLabel.setFont(performanceSlider.getFont());
      labels.put(4, xtrLabel);
      performanceSlider.setLabelTable(labels);
      autoconnectViewerCB.setSelected(VisNow.get().getMainConfig().isAutoconnectViewer());

      startupViewer2DCB.setSelected(VisNow.get().getMainConfig().isStartupViewer2D());
      startupViewer3DCB.setSelected(VisNow.get().getMainConfig().isStartupViewer3D());
      startupFieldViewer3DCB.setSelected(VisNow.get().getMainConfig().isStartupFieldViewer3D());
      startupOrthoViewer3DCB.setSelected(VisNow.get().getMainConfig().isStartupOrthoViewer3D());

      defAppDirTF.setText(VisNow.get().getMainConfig().getDefaultApplicationsPath());
      String tmp = VisNow.get().getMainConfig().getUsableApplicationsPathType();
      if (tmp.equalsIgnoreCase("last"))
      {
         useAppDirCB.setSelectedItem("last");
      } else if (tmp.equalsIgnoreCase("home"))
      {
         useAppDirCB.setSelectedItem("home");
      } else if (tmp.equalsIgnoreCase("default"))
      {
         useAppDirCB.setSelectedItem("default");
      }

      defDatDirTF.setText(VisNow.get().getMainConfig().getDefaultDataPath());
      tmp = VisNow.get().getMainConfig().getUsableDataPathType();
      if (tmp.equalsIgnoreCase("last"))
      {
         useDatDirCB.setSelectedItem("last");
      } else if (tmp.equalsIgnoreCase("home"))
      {
         useDatDirCB.setSelectedItem("home");
      } else if (tmp.equalsIgnoreCase("default"))
      {
         useDatDirCB.setSelectedItem("default");
      }
      infCombo.setSelectedIndex(VisNow.get().getMainConfig().getInfAction());
      nanCombo.setSelectedIndex(VisNow.get().getMainConfig().getNaNAction());
      int nThreads = VisNow.availableProcessors();
      if(nThreads >= Runtime.getRuntime().availableProcessors()) {
          allThreadsRB.setSelected(true);
          threadsSP.setEnabled(false);
          threadsSP.setValue(nThreads);
      } else {
          limitedThreadsRB.setSelected(true);
          threadsSP.setEnabled(true);
          threadsSP.setValue(nThreads);
      }
   }

   /**
    * This method is called from within the constructor to initialize the form. WARNING: Do NOT
    * modify this code. The content of this method is always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents()
   {
      java.awt.GridBagConstraints gridBagConstraints;

      buttonGroup1 = new javax.swing.ButtonGroup();
      jLabel1 = new javax.swing.JLabel();
      jPanel1 = new javax.swing.JPanel();
      startupViewer2DCB = new javax.swing.JCheckBox();
      startupViewer3DCB = new javax.swing.JCheckBox();
      startupFieldViewer3DCB = new javax.swing.JCheckBox();
      startupOrthoViewer3DCB = new javax.swing.JCheckBox();
      jPanel2 = new javax.swing.JPanel();
      autoconnectViewerCB = new javax.swing.JCheckBox();
      autoconnectOrthoViewer3DCB = new javax.swing.JCheckBox();
      jPanel5 = new javax.swing.JPanel();
      jPanel7 = new javax.swing.JPanel();
      jLabel3 = new javax.swing.JLabel();
      defAppDirTF = new javax.swing.JTextField();
      defAppDirBB = new javax.swing.JButton();
      jPanel8 = new javax.swing.JPanel();
      jLabel5 = new javax.swing.JLabel();
      useAppDirCB = new javax.swing.JComboBox();
      jPanel3 = new javax.swing.JPanel();
      jPanel4 = new javax.swing.JPanel();
      jLabel2 = new javax.swing.JLabel();
      defDatDirTF = new javax.swing.JTextField();
      defDatDirBB = new javax.swing.JButton();
      jPanel6 = new javax.swing.JPanel();
      jLabel4 = new javax.swing.JLabel();
      useDatDirCB = new javax.swing.JComboBox();
      jPanel9 = new javax.swing.JPanel();
      performanceSlider = new javax.swing.JSlider();
      jLabel6 = new javax.swing.JLabel();
      jPanel10 = new javax.swing.JPanel();
      allThreadsRB = new javax.swing.JRadioButton();
      limitedThreadsRB = new javax.swing.JRadioButton();
      threadsSP = new javax.swing.JSpinner();
      jPanel11 = new javax.swing.JPanel();
      jLabel7 = new javax.swing.JLabel();
      jLabel8 = new javax.swing.JLabel();
      nanCombo = new pl.edu.icm.visnow.gui.widgets.SteppedComboBox();
      infCombo = new pl.edu.icm.visnow.gui.widgets.SteppedComboBox();

      setMinimumSize(new java.awt.Dimension(400, 374));
      setLayout(new java.awt.GridBagLayout());

      jLabel1.setText("VisNow properties");
      jLabel1.setName("jLabel1"); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
      add(jLabel1, gridBagConstraints);

      jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Startup viewers", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11))); // NOI18N
      jPanel1.setMinimumSize(new java.awt.Dimension(250, 68));
      jPanel1.setName("jPanel1"); // NOI18N
      jPanel1.setOpaque(false);
      jPanel1.setPreferredSize(new java.awt.Dimension(250, 68));
      jPanel1.setLayout(new java.awt.GridLayout(2, 2));

      startupViewer2DCB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      startupViewer2DCB.setText("Viewer 2D");
      startupViewer2DCB.setToolTipText("Initialize Viewer 2D module at VisNow startup");
      startupViewer2DCB.setMaximumSize(new java.awt.Dimension(87, 16));
      startupViewer2DCB.setMinimumSize(new java.awt.Dimension(87, 16));
      startupViewer2DCB.setName("startupViewer2DCB"); // NOI18N
      startupViewer2DCB.setPreferredSize(new java.awt.Dimension(87, 16));
      jPanel1.add(startupViewer2DCB);

      startupViewer3DCB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      startupViewer3DCB.setText("Viewer 3D");
      startupViewer3DCB.setToolTipText("Initialize Viewer 3D module at VisNow startup");
      startupViewer3DCB.setMaximumSize(new java.awt.Dimension(87, 16));
      startupViewer3DCB.setMinimumSize(new java.awt.Dimension(87, 16));
      startupViewer3DCB.setName("startupViewer3DCB"); // NOI18N
      startupViewer3DCB.setOpaque(false);
      startupViewer3DCB.setPreferredSize(new java.awt.Dimension(87, 16));
      jPanel1.add(startupViewer3DCB);

      startupFieldViewer3DCB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      startupFieldViewer3DCB.setText("Field Viewer 3D");
      startupFieldViewer3DCB.setToolTipText("Initialize Field Viewer 3D module at VisNow startup");
      startupFieldViewer3DCB.setMaximumSize(new java.awt.Dimension(120, 16));
      startupFieldViewer3DCB.setMinimumSize(new java.awt.Dimension(120, 16));
      startupFieldViewer3DCB.setName("startupFieldViewer3DCB"); // NOI18N
      startupFieldViewer3DCB.setPreferredSize(new java.awt.Dimension(120, 16));
      jPanel1.add(startupFieldViewer3DCB);

      startupOrthoViewer3DCB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      startupOrthoViewer3DCB.setText("Orthoviewer 3D");
      startupOrthoViewer3DCB.setEnabled(false);
      startupOrthoViewer3DCB.setMaximumSize(new java.awt.Dimension(120, 16));
      startupOrthoViewer3DCB.setMinimumSize(new java.awt.Dimension(120, 16));
      startupOrthoViewer3DCB.setName("startupOrthoViewer3DCB"); // NOI18N
      startupOrthoViewer3DCB.setOpaque(false);
      startupOrthoViewer3DCB.setPreferredSize(new java.awt.Dimension(120, 16));
      jPanel1.add(startupOrthoViewer3DCB);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 3;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      add(jPanel1, gridBagConstraints);

      jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Auto connect", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11))); // NOI18N
      jPanel2.setMinimumSize(new java.awt.Dimension(124, 40));
      jPanel2.setName("jPanel2"); // NOI18N
      jPanel2.setOpaque(false);
      jPanel2.setPreferredSize(new java.awt.Dimension(124, 40));
      jPanel2.setLayout(new java.awt.GridLayout(1, 0));

      autoconnectViewerCB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      autoconnectViewerCB.setText("to newest Viewer 2D/3D");
      autoconnectViewerCB.setToolTipText("Automatically connect module geometry output to Viewer 3D");
      autoconnectViewerCB.setMaximumSize(new java.awt.Dimension(104, 16));
      autoconnectViewerCB.setMinimumSize(new java.awt.Dimension(104, 16));
      autoconnectViewerCB.setName("autoconnectViewerCB"); // NOI18N
      autoconnectViewerCB.setPreferredSize(new java.awt.Dimension(104, 16));
      jPanel2.add(autoconnectViewerCB);

      autoconnectOrthoViewer3DCB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      autoconnectOrthoViewer3DCB.setText("to Orthoviewer 3D");
      autoconnectOrthoViewer3DCB.setEnabled(false);
      autoconnectOrthoViewer3DCB.setMaximumSize(new java.awt.Dimension(120, 16));
      autoconnectOrthoViewer3DCB.setMinimumSize(new java.awt.Dimension(120, 16));
      autoconnectOrthoViewer3DCB.setName("autoconnectOrthoViewer3DCB"); // NOI18N
      autoconnectOrthoViewer3DCB.setOpaque(false);
      autoconnectOrthoViewer3DCB.setPreferredSize(new java.awt.Dimension(120, 16));
      jPanel2.add(autoconnectOrthoViewer3DCB);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 4;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      add(jPanel2, gridBagConstraints);

      jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Application file chooser", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11))); // NOI18N
      jPanel5.setName("jPanel5"); // NOI18N
      jPanel5.setLayout(new java.awt.GridBagLayout());

      jPanel7.setName("jPanel7"); // NOI18N
      jPanel7.setLayout(new java.awt.GridBagLayout());

      jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      jLabel3.setText("Default application directory:");
      jLabel3.setName("jLabel3"); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
      jPanel7.add(jLabel3, gridBagConstraints);

      defAppDirTF.setName("defAppDirTF"); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.insets = new java.awt.Insets(3, 15, 0, 0);
      jPanel7.add(defAppDirTF, gridBagConstraints);

      defAppDirBB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      defAppDirBB.setText("Browse...");
      defAppDirBB.setMargin(new java.awt.Insets(2, 10, 2, 10));
      defAppDirBB.setMaximumSize(new java.awt.Dimension(88, 20));
      defAppDirBB.setMinimumSize(new java.awt.Dimension(88, 20));
      defAppDirBB.setName("defAppDirBB"); // NOI18N
      defAppDirBB.setPreferredSize(new java.awt.Dimension(88, 20));
      defAppDirBB.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            defAppDirBBActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
      jPanel7.add(defAppDirBB, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
      jPanel5.add(jPanel7, gridBagConstraints);

      jPanel8.setName("jPanel8"); // NOI18N
      jPanel8.setLayout(new java.awt.GridBagLayout());

      jLabel5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      jLabel5.setText("Start file chooser in:");
      jLabel5.setName("jLabel5"); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
      jPanel8.add(jLabel5, gridBagConstraints);

      useAppDirCB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      useAppDirCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "default", "last", "home" }));
      useAppDirCB.setName("useAppDirCB"); // NOI18N
      useAppDirCB.setPreferredSize(new java.awt.Dimension(100, 24));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.weighty = 1.0;
      gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
      jPanel8.add(useAppDirCB, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.weighty = 1.0;
      gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
      jPanel5.add(jPanel8, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 5;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      add(jPanel5, gridBagConstraints);

      jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data file choosers", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11))); // NOI18N
      jPanel3.setName("jPanel3"); // NOI18N
      jPanel3.setLayout(new java.awt.GridBagLayout());

      jPanel4.setName("jPanel4"); // NOI18N
      jPanel4.setLayout(new java.awt.GridBagLayout());

      jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      jLabel2.setText("Default data directory:");
      jLabel2.setName("jLabel2"); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
      jPanel4.add(jLabel2, gridBagConstraints);

      defDatDirTF.setName("defDatDirTF"); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.insets = new java.awt.Insets(3, 15, 0, 0);
      jPanel4.add(defDatDirTF, gridBagConstraints);

      defDatDirBB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      defDatDirBB.setText("Browse...");
      defDatDirBB.setMargin(new java.awt.Insets(2, 10, 2, 10));
      defDatDirBB.setMaximumSize(new java.awt.Dimension(88, 20));
      defDatDirBB.setMinimumSize(new java.awt.Dimension(88, 20));
      defDatDirBB.setName("defDatDirBB"); // NOI18N
      defDatDirBB.setPreferredSize(new java.awt.Dimension(88, 20));
      defDatDirBB.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            defDatDirBBActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
      jPanel4.add(defDatDirBB, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
      jPanel3.add(jPanel4, gridBagConstraints);

      jPanel6.setName("jPanel6"); // NOI18N
      jPanel6.setLayout(new java.awt.GridBagLayout());

      jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      jLabel4.setText("Start file chooser in:");
      jLabel4.setName("jLabel4"); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
      jPanel6.add(jLabel4, gridBagConstraints);

      useDatDirCB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      useDatDirCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "default", "last", "home" }));
      useDatDirCB.setName("useDatDirCB"); // NOI18N
      useDatDirCB.setPreferredSize(new java.awt.Dimension(100, 24));
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.weighty = 1.0;
      gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
      jPanel6.add(useDatDirCB, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.weighty = 1.0;
      gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
      jPanel3.add(jPanel6, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 6;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.weighty = 1.0;
      add(jPanel3, gridBagConstraints);

      jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "hardware performance", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
      jPanel9.setName("jPanel9"); // NOI18N
      jPanel9.setLayout(new java.awt.GridBagLayout());

      performanceSlider.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
      performanceSlider.setMajorTickSpacing(2);
      performanceSlider.setMaximum(4);
      performanceSlider.setMinorTickSpacing(1);
      performanceSlider.setPaintLabels(true);
      performanceSlider.setToolTipText("<html>this slider controls continuous update<p>of data mapping (colors, transparency etc.<lp>for low end machines only small objects will be continuously updated<p>to avoid annoying sliders' behavior</html>"); // NOI18N
      performanceSlider.setValue(1);
      performanceSlider.setMinimumSize(new java.awt.Dimension(160, 29));
      performanceSlider.setName("performanceSlider"); // NOI18N
      performanceSlider.setPreferredSize(new java.awt.Dimension(180, 29));
      jPanel9.add(performanceSlider, new java.awt.GridBagConstraints());

      jLabel6.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
      jLabel6.setText("<html>This slider controls continuous update of data mapping (colors, transparency etc.)<p>\nFor low end machines only small objects will be continuously updated<p>to avoid annoying sliders' behavior</html>");
      jLabel6.setName("jLabel6"); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.weightx = 1.0;
      jPanel9.add(jLabel6, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      add(jPanel9, gridBagConstraints);

      jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Multithreading", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11))); // NOI18N
      jPanel10.setMinimumSize(new java.awt.Dimension(250, 70));
      jPanel10.setName("jPanel10"); // NOI18N
      jPanel10.setPreferredSize(new java.awt.Dimension(250, 70));
      jPanel10.setLayout(new java.awt.GridBagLayout());

      buttonGroup1.add(allThreadsRB);
      allThreadsRB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      allThreadsRB.setSelected(true);
      allThreadsRB.setText("use all available CPU cores");
      allThreadsRB.setName("allThreadsRB"); // NOI18N
      allThreadsRB.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            allThreadsRBActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = 2;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      jPanel10.add(allThreadsRB, gridBagConstraints);

      buttonGroup1.add(limitedThreadsRB);
      limitedThreadsRB.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      limitedThreadsRB.setText("limit number of CPU cores to:");
      limitedThreadsRB.setName("limitedThreadsRB"); // NOI18N
      limitedThreadsRB.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            limitedThreadsRBActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weighty = 1.0;
      jPanel10.add(limitedThreadsRB, gridBagConstraints);

      threadsSP.setEnabled(false);
      threadsSP.setMinimumSize(new java.awt.Dimension(48, 20));
      threadsSP.setName("threadsSP"); // NOI18N
      threadsSP.setPreferredSize(new java.awt.Dimension(48, 20));
      threadsSP.setValue(Runtime.getRuntime().availableProcessors());
      threadsSP.addChangeListener(new javax.swing.event.ChangeListener()
      {
         public void stateChanged(javax.swing.event.ChangeEvent evt)
         {
            threadsSPStateChanged(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.weighty = 1.0;
      gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 0);
      jPanel10.add(threadsSP, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
      gridBagConstraints.weightx = 1.0;
      add(jPanel10, gridBagConstraints);

      jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Action on excepional float/double values", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
      jPanel11.setName("jPanel11"); // NOI18N
      jPanel11.setLayout(new java.awt.GridBagLayout());

      jLabel7.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      jLabel7.setText("on NaN");
      jLabel7.setName("jLabel7"); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      jPanel11.add(jLabel7, gridBagConstraints);

      jLabel8.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      jLabel8.setText("on Infinity ");
      jLabel8.setName("jLabel8"); // NOI18N
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      jPanel11.add(jLabel8, gridBagConstraints);

      nanCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "set 0", "set data min", "set data max", "set number min", "set number max", "throw exception" }));
      nanCombo.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      nanCombo.setMinimumSize(new java.awt.Dimension(100, 24));
      nanCombo.setName("nanCombo"); // NOI18N
      nanCombo.setPreferredSize(new java.awt.Dimension(100, 24));
      nanCombo.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            nanComboActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.weightx = 1.0;
      jPanel11.add(nanCombo, gridBagConstraints);

      infCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "set 0", "set data extreme", "set number extreme", "throw exception" }));
      infCombo.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
      infCombo.setMinimumSize(new java.awt.Dimension(100, 24));
      infCombo.setName("infCombo"); // NOI18N
      infCombo.setPreferredSize(new java.awt.Dimension(100, 24));
      infCombo.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            infComboActionPerformed(evt);
         }
      });
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.weightx = 1.0;
      jPanel11.add(infCombo, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 1;
      gridBagConstraints.gridy = 2;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.weightx = 1.0;
      add(jPanel11, gridBagConstraints);
   }// </editor-fold>//GEN-END:initComponents

    private void defAppDirBBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defAppDirBBActionPerformed
       JFileChooser chooser = new JFileChooser(VisNow.get().getMainConfig().getDefaultApplicationsPath());
       chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
       if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
       {
          defAppDirTF.setText(chooser.getSelectedFile().getAbsolutePath());
       }
    }//GEN-LAST:event_defAppDirBBActionPerformed

    private void defDatDirBBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defDatDirBBActionPerformed
       JFileChooser chooser = new JFileChooser(VisNow.get().getMainConfig().getDefaultDataPath());
       chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
       if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
       {
          defDatDirTF.setText(chooser.getSelectedFile().getAbsolutePath());
       }
    }//GEN-LAST:event_defDatDirBBActionPerformed

    private void threadsSPStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_threadsSPStateChanged
        int n = (Integer)threadsSP.getValue();
        int N = Runtime.getRuntime().availableProcessors();
        if(n < 1) {
            threadsSP.setValue(1);
            return;            
        }
        
        if(n > N) {
            threadsSP.setValue(N);
            return;
        }
    }//GEN-LAST:event_threadsSPStateChanged

    private void allThreadsRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allThreadsRBActionPerformed
        threadsSP.setEnabled(limitedThreadsRB.isSelected());
    }//GEN-LAST:event_allThreadsRBActionPerformed

    private void limitedThreadsRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limitedThreadsRBActionPerformed
        threadsSP.setEnabled(limitedThreadsRB.isSelected());
    }//GEN-LAST:event_limitedThreadsRBActionPerformed

   private void nanComboActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nanComboActionPerformed
   {//GEN-HEADEREND:event_nanComboActionPerformed
      VisNow.setOnNaN(nanCombo.getSelectedIndex());
   }//GEN-LAST:event_nanComboActionPerformed

   private void infComboActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_infComboActionPerformed
   {//GEN-HEADEREND:event_infComboActionPerformed
      VisNow.setOnInf(infCombo.getSelectedIndex());
   }//GEN-LAST:event_infComboActionPerformed

    
    
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JRadioButton allThreadsRB;
   private javax.swing.JCheckBox autoconnectOrthoViewer3DCB;
   private javax.swing.JCheckBox autoconnectViewerCB;
   private javax.swing.ButtonGroup buttonGroup1;
   private javax.swing.JButton defAppDirBB;
   private javax.swing.JTextField defAppDirTF;
   private javax.swing.JButton defDatDirBB;
   private javax.swing.JTextField defDatDirTF;
   private pl.edu.icm.visnow.gui.widgets.SteppedComboBox infCombo;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JLabel jLabel5;
   private javax.swing.JLabel jLabel6;
   private javax.swing.JLabel jLabel7;
   private javax.swing.JLabel jLabel8;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JPanel jPanel10;
   private javax.swing.JPanel jPanel11;
   private javax.swing.JPanel jPanel2;
   private javax.swing.JPanel jPanel3;
   private javax.swing.JPanel jPanel4;
   private javax.swing.JPanel jPanel5;
   private javax.swing.JPanel jPanel6;
   private javax.swing.JPanel jPanel7;
   private javax.swing.JPanel jPanel8;
   private javax.swing.JPanel jPanel9;
   private javax.swing.JRadioButton limitedThreadsRB;
   private pl.edu.icm.visnow.gui.widgets.SteppedComboBox nanCombo;
   private javax.swing.JSlider performanceSlider;
   private javax.swing.JCheckBox startupFieldViewer3DCB;
   private javax.swing.JCheckBox startupOrthoViewer3DCB;
   private javax.swing.JCheckBox startupViewer2DCB;
   private javax.swing.JCheckBox startupViewer3DCB;
   private javax.swing.JSpinner threadsSP;
   private javax.swing.JComboBox useAppDirCB;
   private javax.swing.JComboBox useDatDirCB;
   // End of variables declaration//GEN-END:variables

   public void apply()
   {
      VisNow.get().getMainConfig().setStartupViewer2D(startupViewer2DCB.isSelected());
      VisNow.get().getMainConfig().setStartupViewer3D(startupViewer3DCB.isSelected());
      VisNow.get().getMainConfig().setStartupFieldViewer3D(startupFieldViewer3DCB.isSelected());
      VisNow.get().getMainConfig().setAutoconnectViewer(autoconnectViewerCB.isSelected());
      VisNow.get().getMainConfig().setStartupOrthoViewer3D(startupOrthoViewer3DCB.isSelected());
      VisNow.get().getMainConfig().setAutoconnectOrthoViewer3D(autoconnectOrthoViewer3DCB.isSelected());
      VisNow.get().getMainConfig().setDefaultApplicationsPath(defAppDirTF.getText());
      VisNow.get().getMainConfig().setUsableApplicationsPathType((String) useAppDirCB.getSelectedItem());
      VisNow.get().getMainConfig().setDefaultDataPath(defDatDirTF.getText());
      VisNow.get().getMainConfig().setUsableDataPathType((String) useDatDirCB.getSelectedItem());
      VisNow.get().getMainConfig().setColorAdjustingLimit(1 << 4 * performanceSlider.getValue() + 13);
      VisNow.get().getMainConfig().setInfAction(infCombo.getSelectedIndex());
      VisNow.get().getMainConfig().setNaNAction(nanCombo.getSelectedIndex());
      VisNow.get().getMainConfig().setNAvailableThreads(allThreadsRB.isSelected()?Runtime.getRuntime().availableProcessors():(Integer)threadsSP.getValue());
      VisNow.get().getMainConfig().saveConfig();

   }
}
