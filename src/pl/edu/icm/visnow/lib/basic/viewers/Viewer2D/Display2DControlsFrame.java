/* VisNow
 Copyright (C) 2006-2013 University of Warsaw, ICM

 This file is part of GNU Classpath.

 GNU Classpath is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2, or (at your option)
 any later version.

 GNU Classpath is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with GNU Classpath; see the file COPYING.  If not, write to the 
 University of Warsaw, Interdisciplinary Centre for Mathematical and 
 Computational Modelling, Pawinskiego 5a, 02-106 Warsaw, Poland. 

 Linking this library statically or dynamically with other modules is
 making a combined work based on this library.  Thus, the terms and
 conditions of the GNU General Public License cover the whole
 combination.

 As a special exception, the copyright holders of this library give you
 permission to link this library with independent modules to produce an
 executable, regardless of the license terms of these independent
 modules, and to copy and distribute the resulting executable under
 terms of your choice, provided that you also meet, for each linked
 independent module, the terms and conditions of the license of that
 module.  An independent module is a module which is not derived from
 or based on this library.  If you modify this library, you may extend
 this exception to your version of the library, but you are not
 obligated to do so.  If you do not wish to do so, delete this
 exception statement from your version. */
package pl.edu.icm.visnow.lib.basic.viewers.Viewer2D;

import java.awt.Color;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultTreeSelectionModel;
import javax.swing.tree.TreeSelectionModel;
import pl.edu.icm.visnow.lib.utils.geometry2D.TransformedGeometryObject2D;
import pl.edu.icm.visnow.system.main.VisNow;
import pl.edu.icm.visnow.system.swing.filechooser.VNFileChooser;

/**
 * @author Bartosz Borucki (babor@icm.edu.pl) Warsaw University,
 * Interdisciplinary Centre for Mathematical and Computational Modelling
 */
public class Display2DControlsFrame extends javax.swing.JFrame {

    private Display2DPanel displayPanel = null;
    private int level;
    private TransformedGeometryObject2DTreeModel treeModel;
    JFileChooser dataFileChooser = new JFileChooser();

    /**
     * Creates new form Display2DControlsFrame
     */
    public Display2DControlsFrame() {
        initComponents();
        setTitle("Viewer2D Controls");
        init();
    }

    public Display2DControlsFrame(Display2DPanel panel) {
        initComponents();
        setTitle("Viewer2D Controls");
        this.displayPanel = panel;
        this.treeModel = new TransformedGeometryObject2DTreeModel(displayPanel.getRootObject());
        init();
    }

    private void init() {
        dataFileChooser.setAcceptAllFileFilterUsed(false);
        objectEditor.setPanel(displayPanel);
        objectsTree.setModel(treeModel);
        objectsTree.addTreeSelectionListener(new TreeSelectionListener() {
            public void valueChanged(TreeSelectionEvent evt) {
                if (objectsTree.getSelectionPath() != null) {
                    upButton.setEnabled(true);
                    downButton.setEnabled(true);
                    objectEditor.setObject(
                            (TransformedGeometryObject2D) objectsTree.getSelectionPath().getLastPathComponent());
                } else {
                    upButton.setEnabled(false);
                    downButton.setEnabled(false);
                    objectEditor.setObject(null);
                }
            }
        });
        DefaultTreeSelectionModel treeSelectionModel = new DefaultTreeSelectionModel();
        treeSelectionModel.setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        objectsTree.setSelectionModel(treeSelectionModel);
        autoCenterTB.setSelected(displayPanel.isAutoCenter());
        autoNormalizeTB.setSelected(displayPanel.isAutoNormalize());

        movieCreationPanel.setPanel(displayPanel);

        dataFileChooser.setCurrentDirectory(new File(VisNow.get().getMainConfig().getWorkeffectPath()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        formatBG = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        generalTabPanel = new javax.swing.JPanel();
        topPanel = new javax.swing.JPanel();
        bgButton = new javax.swing.JButton();
        titleButton = new javax.swing.JButton();
        autoCenterTB = new javax.swing.JToggleButton();
        autoNormalizeTB = new javax.swing.JToggleButton();
        centerButton = new javax.swing.JButton();
        normalizeButton = new javax.swing.JButton();
        writeImagePanel = new javax.swing.JPanel();
        writeButton = new javax.swing.JButton();
        movieCreationPanel = new pl.edu.icm.visnow.lib.basic.viewers.Viewer2D.MovieCreationPanel2D();
        bottomPanel = new javax.swing.JPanel();
        objectsTabPanel = new javax.swing.JPanel();
        treeSP = new javax.swing.JScrollPane();
        objectsTree = new javax.swing.JTree();
        movePanel = new javax.swing.JPanel();
        upButton = new javax.swing.JButton();
        downButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        objectEditor = new pl.edu.icm.visnow.lib.basic.viewers.Viewer2D.Display2DObjectEditor();

        setTitle("Viewer2D Controls");
        setIconImage(new ImageIcon(getClass().getResource("/pl/edu/icm/visnow/gui/icons/big/visnow.png")).getImage());
        setMinimumSize(new java.awt.Dimension(255, 430));

        jPanel1.setMinimumSize(new java.awt.Dimension(250, 500));
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 500));
        jPanel1.setLayout(new java.awt.BorderLayout());

        generalTabPanel.setMinimumSize(new java.awt.Dimension(250, 400));
        generalTabPanel.setPreferredSize(new java.awt.Dimension(250, 400));
        generalTabPanel.setLayout(new java.awt.GridBagLayout());

        topPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        topPanel.setMinimumSize(new java.awt.Dimension(200, 70));
        topPanel.setPreferredSize(new java.awt.Dimension(300, 70));
        topPanel.setLayout(new java.awt.GridBagLayout());

        bgButton.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        bgButton.setText("Background");
        bgButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
        bgButton.setMaximumSize(new java.awt.Dimension(70, 24));
        bgButton.setMinimumSize(new java.awt.Dimension(70, 24));
        bgButton.setPreferredSize(new java.awt.Dimension(70, 24));
        bgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        topPanel.add(bgButton, gridBagConstraints);

        titleButton.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        titleButton.setText("Title");
        titleButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
        titleButton.setMaximumSize(new java.awt.Dimension(70, 25));
        titleButton.setMinimumSize(new java.awt.Dimension(70, 25));
        titleButton.setPreferredSize(new java.awt.Dimension(70, 25));
        titleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 2, 0, 0);
        topPanel.add(titleButton, gridBagConstraints);

        autoCenterTB.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        autoCenterTB.setText("Auto center");
        autoCenterTB.setMargin(new java.awt.Insets(2, 2, 2, 2));
        autoCenterTB.setMaximumSize(new java.awt.Dimension(90, 24));
        autoCenterTB.setMinimumSize(new java.awt.Dimension(90, 24));
        autoCenterTB.setPreferredSize(new java.awt.Dimension(90, 24));
        autoCenterTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoCenterTBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        topPanel.add(autoCenterTB, gridBagConstraints);

        autoNormalizeTB.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        autoNormalizeTB.setText("Auto normalize");
        autoNormalizeTB.setMargin(new java.awt.Insets(2, 2, 2, 2));
        autoNormalizeTB.setMaximumSize(new java.awt.Dimension(90, 24));
        autoNormalizeTB.setMinimumSize(new java.awt.Dimension(90, 24));
        autoNormalizeTB.setPreferredSize(new java.awt.Dimension(90, 24));
        autoNormalizeTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoNormalizeTBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 2, 0, 0);
        topPanel.add(autoNormalizeTB, gridBagConstraints);

        centerButton.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        centerButton.setText("Center");
        centerButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
        centerButton.setMaximumSize(new java.awt.Dimension(45, 24));
        centerButton.setMinimumSize(new java.awt.Dimension(45, 24));
        centerButton.setPreferredSize(new java.awt.Dimension(45, 24));
        centerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                centerButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        topPanel.add(centerButton, gridBagConstraints);

        normalizeButton.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        normalizeButton.setText("Normalize");
        normalizeButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
        normalizeButton.setMaximumSize(new java.awt.Dimension(59, 24));
        normalizeButton.setMinimumSize(new java.awt.Dimension(59, 24));
        normalizeButton.setPreferredSize(new java.awt.Dimension(59, 24));
        normalizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalizeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 2, 0, 2);
        topPanel.add(normalizeButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        generalTabPanel.add(topPanel, gridBagConstraints);

        writeImagePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Write image"));
        writeImagePanel.setLayout(new java.awt.GridBagLayout());

        writeButton.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        writeButton.setText("Save as...");
        writeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        writeImagePanel.add(writeButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        generalTabPanel.add(writeImagePanel, gridBagConstraints);

        movieCreationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Movie creation"));
        movieCreationPanel.setMinimumSize(new java.awt.Dimension(300, 300));
        movieCreationPanel.setPreferredSize(new java.awt.Dimension(300, 300));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        generalTabPanel.add(movieCreationPanel, gridBagConstraints);

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 247, Short.MAX_VALUE)
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        generalTabPanel.add(bottomPanel, gridBagConstraints);

        jTabbedPane1.addTab("general", generalTabPanel);

        objectsTabPanel.setPreferredSize(new java.awt.Dimension(250, 450));
        objectsTabPanel.setLayout(new java.awt.GridBagLayout());

        treeSP.setMinimumSize(new java.awt.Dimension(70, 200));
        treeSP.setPreferredSize(new java.awt.Dimension(70, 200));

        objectsTree.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        treeSP.setViewportView(objectsTree);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        objectsTabPanel.add(treeSP, gridBagConstraints);

        movePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("move selected layer"));
        movePanel.setLayout(new java.awt.GridBagLayout());

        upButton.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        upButton.setText("up");
        upButton.setEnabled(false);
        upButton.setMaximumSize(new java.awt.Dimension(80, 24));
        upButton.setMinimumSize(new java.awt.Dimension(80, 24));
        upButton.setPreferredSize(new java.awt.Dimension(80, 24));
        upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        movePanel.add(upButton, gridBagConstraints);

        downButton.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        downButton.setText("down");
        downButton.setEnabled(false);
        downButton.setMaximumSize(new java.awt.Dimension(80, 24));
        downButton.setMinimumSize(new java.awt.Dimension(80, 24));
        downButton.setPreferredSize(new java.awt.Dimension(80, 24));
        downButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        movePanel.add(downButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        objectsTabPanel.add(movePanel, gridBagConstraints);

        jPanel3.setMaximumSize(new java.awt.Dimension(32767, 200));
        jPanel3.setMinimumSize(new java.awt.Dimension(100, 200));
        jPanel3.setPreferredSize(new java.awt.Dimension(100, 200));
        jPanel3.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(objectEditor, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        objectsTabPanel.add(jPanel3, gridBagConstraints);

        jTabbedPane1.addTab("objects", objectsTabPanel);

        jPanel1.add(jTabbedPane1, java.awt.BorderLayout.CENTER);
        jTabbedPane1.getAccessibleContext().setAccessibleName("general");

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void autoNormalizeTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoNormalizeTBActionPerformed
        displayPanel.setAutoNormalize(autoNormalizeTB.isSelected());
        autoCenterTB.setSelected(autoNormalizeTB.isSelected());
    }//GEN-LAST:event_autoNormalizeTBActionPerformed

    private void autoCenterTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoCenterTBActionPerformed
        displayPanel.setAutoCenter(autoCenterTB.isSelected());
    }//GEN-LAST:event_autoCenterTBActionPerformed

    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downButtonActionPerformed
        if (objectsTree.getSelectionPath() == null) {
            return;
        }
        TransformedGeometryObject2D obj = (TransformedGeometryObject2D) objectsTree.getSelectionPath().getLastPathComponent();
        if (objectsTree.getSelectionPath().getParentPath() != null) {
            TransformedGeometryObject2D parent = (TransformedGeometryObject2D) objectsTree.getSelectionPath().getParentPath().getLastPathComponent();
            parent.moveChildDown(obj);
            displayPanel.update();
        }

    }//GEN-LAST:event_downButtonActionPerformed

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upButtonActionPerformed
        if (objectsTree.getSelectionPath() == null) {
            return;
        }
        TransformedGeometryObject2D obj = (TransformedGeometryObject2D) objectsTree.getSelectionPath().getLastPathComponent();
        if (objectsTree.getSelectionPath().getParentPath() != null) {
            TransformedGeometryObject2D parent = (TransformedGeometryObject2D) objectsTree.getSelectionPath().getParentPath().getLastPathComponent();
            parent.moveChildUp(obj);
            displayPanel.update();
        }
    }//GEN-LAST:event_upButtonActionPerformed

    private void titleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleButtonActionPerformed
        if (displayPanel == null) {
            return;
        }
        displayPanel.setTitle(JOptionPane.showInputDialog("Please enter title:", displayPanel.getTitle()));
    }//GEN-LAST:event_titleButtonActionPerformed

    private void bgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgButtonActionPerformed
        if (displayPanel == null) {
            return;
        }
        Color c = JColorChooser.showDialog(this, "background", displayPanel.getBackgroundColor());
        if (c != null) {
            displayPanel.setBackgroundColor(c);
        }
    }//GEN-LAST:event_bgButtonActionPerformed

    private void writeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeButtonActionPerformed

        FileNameExtensionFilter jpegImagesFilter = new FileNameExtensionFilter("JPEG images (*.jpg, *.jpeg)", "jpg", "jpeg", "JPG", "JPEG");
        FileNameExtensionFilter gifImagesFilter =
                new FileNameExtensionFilter("GIF images (*.gif)", "gif", "GIF");
        FileNameExtensionFilter pngImagesFilter =
                new FileNameExtensionFilter("PNG images (*.png)", "png", "PNG");
        FileNameExtensionFilter tiffImagesFilter =
                new FileNameExtensionFilter("TIFF images (*.tif, *.tiff)", "tif", "TIF", "tiff", "TIFF");
        FileNameExtensionFilter bmpImagesFilter =
                new FileNameExtensionFilter("BMP images (*.bmp)", "bmp", "BMP");
        FileNameExtensionFilter pcxImagesFilter =
                new FileNameExtensionFilter("PCX images (*.pcx)", "pcx", "PCX");
        
        dataFileChooser.addChoosableFileFilter(jpegImagesFilter);
    dataFileChooser.addChoosableFileFilter(gifImagesFilter);
    dataFileChooser.addChoosableFileFilter(pngImagesFilter);
    dataFileChooser.addChoosableFileFilter(tiffImagesFilter);
    dataFileChooser.addChoosableFileFilter(bmpImagesFilter);
    dataFileChooser.addChoosableFileFilter(pcxImagesFilter);


        int returnVal = dataFileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            displayPanel.writeImage(VNFileChooser.fileWithExtensionAddedIfNecessary(dataFileChooser.getSelectedFile(), (FileNameExtensionFilter)dataFileChooser.getFileFilter()));
        }



    }//GEN-LAST:event_writeButtonActionPerformed

    private void centerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_centerButtonActionPerformed
        displayPanel.center();
    }//GEN-LAST:event_centerButtonActionPerformed

    private void normalizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalizeButtonActionPerformed
        displayPanel.normalize();
    }//GEN-LAST:event_normalizeButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton autoCenterTB;
    private javax.swing.JToggleButton autoNormalizeTB;
    private javax.swing.JButton bgButton;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JButton centerButton;
    private javax.swing.JButton downButton;
    private javax.swing.ButtonGroup formatBG;
    private javax.swing.JPanel generalTabPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel movePanel;
    private pl.edu.icm.visnow.lib.basic.viewers.Viewer2D.MovieCreationPanel2D movieCreationPanel;
    private javax.swing.JButton normalizeButton;
    private pl.edu.icm.visnow.lib.basic.viewers.Viewer2D.Display2DObjectEditor objectEditor;
    private javax.swing.JPanel objectsTabPanel;
    private javax.swing.JTree objectsTree;
    private javax.swing.JButton titleButton;
    private javax.swing.JPanel topPanel;
    private javax.swing.JScrollPane treeSP;
    private javax.swing.JButton upButton;
    private javax.swing.JButton writeButton;
    private javax.swing.JPanel writeImagePanel;
    // End of variables declaration//GEN-END:variables

    public void setDisplayPanel(Display2DPanel panel) {
        this.displayPanel = panel;
        movieCreationPanel.setPanel(displayPanel);

    }

    public Display2DPanel getDisplayPanel() {
        return displayPanel;
    }

    void setTreeRoot(TransformedGeometryObject2D root) {
        treeModel = new TransformedGeometryObject2DTreeModel(root);
        objectsTree.setModel(treeModel);
    }

    public void resetTree() {
        javax.swing.SwingUtilities.invokeLater(
                new Runnable() {
            public void run() {
                objectsTree.updateUI();
            }
        });
        objectsTree.clearSelection();
        objectEditor.setObject(null);
    }

    public void updateTree() {
        javax.swing.SwingUtilities.invokeLater(
                new Runnable() {
            public void run() {
                objectsTree.updateUI();
            }
        });
    }

    public void update() {
        autoCenterTB.setSelected(displayPanel.isAutoCenter());
        autoNormalizeTB.setSelected(displayPanel.isAutoNormalize());
        objectEditor.updateWidgets();
    }

    /**
     * @return the movieCreationPanel
     */
    public pl.edu.icm.visnow.lib.basic.viewers.Viewer2D.MovieCreationPanel2D getMovieCreationPanel() {
        return movieCreationPanel;
    }

    public enum ImageFormat {

        JPEG_FORMAT("jpg"),
        PNG_FORMAT("png");
        private String extension;

        private ImageFormat(String description) {
            this.extension = description;
        }

        public String getExtension() {
            return extension;
        }
    }
}
