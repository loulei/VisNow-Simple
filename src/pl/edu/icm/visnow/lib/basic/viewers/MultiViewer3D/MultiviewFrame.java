/* VisNow
   Copyright (C) 2006-2013 University of Warsaw, ICM

This file is part of GNU Classpath.

GNU Classpath is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU Classpath is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Classpath; see the file COPYING.  If not, write to the 
University of Warsaw, Interdisciplinary Centre for Mathematical and 
Computational Modelling, Pawinskiego 5a, 02-106 Warsaw, Poland. 

Linking this library statically or dynamically with other modules is
making a combined work based on this library.  Thus, the terms and
conditions of the GNU General Public License cover the whole
combination.

As a special exception, the copyright holders of this library give you
permission to link this library with independent modules to produce an
executable, regardless of the license terms of these independent
modules, and to copy and distribute the resulting executable under
terms of your choice, provided that you also meet, for each linked
independent module, the terms and conditions of the license of that
module.  An independent module is a module which is not derived from
or based on this library.  If you modify this library, you may extend
this exception to your version of the library, but you are not
obligated to do so.  If you do not wish to do so, delete this
exception statement from your version. */

package pl.edu.icm.visnow.lib.basic.viewers.MultiViewer3D;

import java.awt.BorderLayout;
import javax.swing.ImageIcon;
import pl.edu.icm.visnow.geometries.geometryTemplates.Reper;
import pl.edu.icm.visnow.gui.events.IntValueModificationEvent;
import pl.edu.icm.visnow.gui.events.IntValueModificationListener;

/**
 *
 * @author know
 */
public class MultiviewFrame extends javax.swing.JFrame
{

   private UniverseBuilder uniBuilder = new UniverseBuilder();
   /**
    * Creates new form MultiviewFrame
    */
   public MultiviewFrame()
   {
      initComponents();
      uniBuilder.getScene().setBackgroundColor(bgrColorEditor.getColor());
      mainPanel.add(uniBuilder.getRightCamera().getCanvas3D(), BorderLayout.CENTER);
      frontPanel.add(uniBuilder.getFrontCamera().getCanvas3D(), BorderLayout.CENTER);
      topPanel.add(uniBuilder.getTopCamera().getCanvas3D(),     BorderLayout.CENTER);
      rightPanel.add(uniBuilder.getMainCamera().getCanvas3D(),   BorderLayout.CENTER);
      topHorizTranslationRoller.addChangeListener(new IntValueModificationListener() 
      {
         @Override
         public void intValueChanged(IntValueModificationEvent e)
         {
            uniBuilder.translateT(-e.getVal()/1000.f);
         }
      });
      topVertTranslationRoller.addChangeListener(new IntValueModificationListener() 
      {
         @Override
         public void intValueChanged(IntValueModificationEvent e)
         {
            uniBuilder.translateU(-e.getVal()/1000.f);
         }
      });
      sideHorizTranslationRoller.addChangeListener(new IntValueModificationListener() 
      {
         @Override
         public void intValueChanged(IntValueModificationEvent e)
         {
            frontVertTranslationRoller.setValue(e.getVal());
            uniBuilder.translateV(-e.getVal()/1000.f);
         }
      });
      frontVertTranslationRoller.addChangeListener(new IntValueModificationListener() 
      {
         @Override
         public void intValueChanged(IntValueModificationEvent e)
         {
            sideHorizTranslationRoller.setValue(e.getVal());
            uniBuilder.translateV(-e.getVal()/1000.f);
         }
      });
   }

   public UniverseBuilder getUniBuilder()
   {
      return uniBuilder;
   }
   
   /**
    * This method is called from within the constructor to initialize the form. WARNING: Do NOT
    * modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        frontPanel = new javax.swing.JPanel();
        rightPanel = new javax.swing.JPanel();
        topPanel = new javax.swing.JPanel();
        mainPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        frontVertTranslationRoller = new pl.edu.icm.visnow.gui.widgets.VerticalUnboundedRoller.UnboundedIntRoller();
        jPanel5 = new javax.swing.JPanel();
        topHorizTranslationRoller = new pl.edu.icm.visnow.gui.widgets.UnboundedRoller.UnboundedIntRoller();
        jPanel6 = new javax.swing.JPanel();
        bgrColorEditor = new pl.edu.icm.visnow.gui.widgets.ColorEditor();
        sideHorizTranslationRoller = new pl.edu.icm.visnow.gui.widgets.UnboundedRoller.UnboundedIntRoller();
        jPanel7 = new javax.swing.JPanel();
        topVertTranslationRoller = new pl.edu.icm.visnow.gui.widgets.VerticalUnboundedRoller.UnboundedIntRoller();
        jPanel2 = new javax.swing.JPanel();

        setTitle("MultiView3D");
        setIconImage(new ImageIcon(getClass().getResource("/pl/edu/icm/visnow/gui/icons/big/visnow.png")).getImage());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        frontPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        frontPanel.setMinimumSize(new java.awt.Dimension(100, 100));
        frontPanel.setPreferredSize(new java.awt.Dimension(400, 300));
        frontPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(frontPanel, gridBagConstraints);

        rightPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        rightPanel.setMinimumSize(new java.awt.Dimension(100, 100));
        rightPanel.setName(""); // NOI18N
        rightPanel.setPreferredSize(new java.awt.Dimension(400, 300));
        rightPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(rightPanel, gridBagConstraints);

        topPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        topPanel.setMinimumSize(new java.awt.Dimension(100, 100));
        topPanel.setPreferredSize(new java.awt.Dimension(400, 300));
        topPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(topPanel, gridBagConstraints);

        mainPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mainPanel.setMinimumSize(new java.awt.Dimension(100, 100));
        mainPanel.setName(""); // NOI18N
        mainPanel.setOpaque(false);
        mainPanel.setPreferredSize(new java.awt.Dimension(400, 300));
        mainPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(mainPanel, gridBagConstraints);

        jPanel4.setMinimumSize(new java.awt.Dimension(22, 60));
        jPanel4.setOpaque(false);
        jPanel4.setPreferredSize(new java.awt.Dimension(22, 100));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        frontVertTranslationRoller.setInsets(new java.awt.Insets(0, 0, 0, 0));
        frontVertTranslationRoller.setMinimumSize(new java.awt.Dimension(15, 200));
        frontVertTranslationRoller.setPreferredSize(new java.awt.Dimension(20, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel4.add(frontVertTranslationRoller, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel5.setMinimumSize(new java.awt.Dimension(60, 17));
        jPanel5.setName(""); // NOI18N
        jPanel5.setPreferredSize(new java.awt.Dimension(200, 22));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        topHorizTranslationRoller.setInsets(new java.awt.Insets(0, 0, 0, 0));
        topHorizTranslationRoller.setMinimumSize(new java.awt.Dimension(60, 15));
        topHorizTranslationRoller.setOpaque(true);
        topHorizTranslationRoller.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel5.add(topHorizTranslationRoller, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jPanel5, gridBagConstraints);

        jPanel6.setMinimumSize(new java.awt.Dimension(70, 17));
        jPanel6.setPreferredSize(new java.awt.Dimension(110, 22));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        bgrColorEditor.setBrightness(20);
        bgrColorEditor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bgrColorEditorStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 41, 0, 0);
        jPanel6.add(bgrColorEditor, gridBagConstraints);

        sideHorizTranslationRoller.setInsets(new java.awt.Insets(0, 0, 0, 0));
        sideHorizTranslationRoller.setMinimumSize(new java.awt.Dimension(60, 15));
        sideHorizTranslationRoller.setOpaque(true);
        sideHorizTranslationRoller.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel6.add(sideHorizTranslationRoller, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jPanel6, gridBagConstraints);

        jPanel7.setMinimumSize(new java.awt.Dimension(22, 200));
        jPanel7.setPreferredSize(new java.awt.Dimension(22, 100));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        topVertTranslationRoller.setInsets(new java.awt.Insets(0, 0, 0, 0));
        topVertTranslationRoller.setMinimumSize(new java.awt.Dimension(15, 200));
        topVertTranslationRoller.setPreferredSize(new java.awt.Dimension(20, 200));
        jPanel7.add(topVertTranslationRoller, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jPanel7, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridBagLayout());
        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        setSize(new java.awt.Dimension(1042, 773));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

   private void bgrColorEditorStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_bgrColorEditorStateChanged
   {//GEN-HEADEREND:event_bgrColorEditorStateChanged
      uniBuilder.getScene().setBackgroundColor(bgrColorEditor.getColor());
   }//GEN-LAST:event_bgrColorEditorStateChanged

   /**
    * @param args the command line arguments
    */
   public static void main(String args[])
   {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
       * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try
      {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
         {
            if ("Nimbus".equals(info.getName()))
            {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex)
      {
         java.util.logging.Logger.getLogger(MultiviewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex)
      {
         java.util.logging.Logger.getLogger(MultiviewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex)
      {
         java.util.logging.Logger.getLogger(MultiviewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex)
      {
         java.util.logging.Logger.getLogger(MultiviewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable()
      {
         public void run()
         {
            Reper reper = new Reper();
            MultiviewFrame f = new MultiviewFrame();
            f.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            f.getUniBuilder().getScene().addGeomObject(reper);
            f.setVisible(true);
         }
      });
   }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private pl.edu.icm.visnow.gui.widgets.ColorEditor bgrColorEditor;
    private javax.swing.JPanel frontPanel;
    private pl.edu.icm.visnow.gui.widgets.VerticalUnboundedRoller.UnboundedIntRoller frontVertTranslationRoller;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel rightPanel;
    private pl.edu.icm.visnow.gui.widgets.UnboundedRoller.UnboundedIntRoller sideHorizTranslationRoller;
    private pl.edu.icm.visnow.gui.widgets.UnboundedRoller.UnboundedIntRoller topHorizTranslationRoller;
    private javax.swing.JPanel topPanel;
    private pl.edu.icm.visnow.gui.widgets.VerticalUnboundedRoller.UnboundedIntRoller topVertTranslationRoller;
    // End of variables declaration//GEN-END:variables
}
