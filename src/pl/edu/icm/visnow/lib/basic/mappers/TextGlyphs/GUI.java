/* VisNow
   Copyright (C) 2006-2013 University of Warsaw, ICM

This file is part of GNU Classpath.

GNU Classpath is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU Classpath is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Classpath; see the file COPYING.  If not, write to the 
University of Warsaw, Interdisciplinary Centre for Mathematical and 
Computational Modelling, Pawinskiego 5a, 02-106 Warsaw, Poland. 

Linking this library statically or dynamically with other modules is
making a combined work based on this library.  Thus, the terms and
conditions of the GNU General Public License cover the whole
combination.

As a special exception, the copyright holders of this library give you
permission to link this library with independent modules to produce an
executable, regardless of the license terms of these independent
modules, and to copy and distribute the resulting executable under
terms of your choice, provided that you also meet, for each linked
independent module, the terms and conditions of the license of that
module.  An independent module is a module which is not derived from
or based on this library.  If you modify this library, you may extend
this exception to your version of the library, but you are not
obligated to do so.  If you do not wish to do so, delete this
exception statement from your version. */

package pl.edu.icm.visnow.lib.basic.mappers.TextGlyphs;

import java.awt.CardLayout;
import java.util.Hashtable;
import javax.swing.JLabel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import pl.edu.icm.visnow.datasets.Field;
import pl.edu.icm.visnow.datasets.RegularField;
import pl.edu.icm.visnow.geometries.parameters.AbstractDataMappingParams;

/**
 *
 * @author  Krzysztof S. Nowinski, University of Warsaw, ICM
 */
public class GUI extends javax.swing.JPanel
{
   private Params params = new Params();
   private Field inField = null;
   private Hashtable<Integer, JLabel> downLabels = new Hashtable<Integer, JLabel>();
   private int[] down =
   {
      1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000
   };
   private String[] downTexts =
   {
      "1", "", "", "10", "", "", "100", "", "", "1000", "", "", "1e4", "", "", "1e5"
   };
   private float smax = 1;
   private int[] downsize;


   /** Creates new form VNgraph3DUI */
   public GUI()
   {
      initComponents();
      postInitComponents();

   }

   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mapComboBox = new pl.edu.icm.visnow.lib.gui.DataComponentSelector();
        jPanel5 = new javax.swing.JPanel();
        downsizeSlider = new javax.swing.JSlider();
        regularFieldDownsizeUI = new pl.edu.icm.visnow.lib.gui.DownsizeUI();
        jLabel1 = new javax.swing.JLabel();
        formatField = new javax.swing.JTextField();
        fontGUI = new pl.edu.icm.visnow.geometries.gui.FontGUI();
        thrComponentSelector = new pl.edu.icm.visnow.lib.gui.DataComponentSelector();
        thrSlider = new pl.edu.icm.visnow.gui.widgets.FloatSlider();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));

        setLayout(new java.awt.GridBagLayout());

        mapComboBox.setNumericComponentsOnly(false);
        mapComboBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mapComboBoxStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(mapComboBox, gridBagConstraints);

        jPanel5.setOpaque(false);
        jPanel5.setLayout(new java.awt.CardLayout());

        downsizeSlider.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        downsizeSlider.setMajorTickSpacing(1);
        downsizeSlider.setMaximum(15);
        downsizeSlider.setMinorTickSpacing(1);
        downsizeSlider.setPaintLabels(true);
        downsizeSlider.setPaintTicks(true);
        downsizeSlider.setSnapToTicks(true);
        downsizeSlider.setBorder(javax.swing.BorderFactory.createTitledBorder("downsize"));
        downsizeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                downsizeSliderStateChanged(evt);
            }
        });
        jPanel5.add(downsizeSlider, "downsizeSlider");
        jPanel5.add(regularFieldDownsizeUI, "regularFieldDownsizeUI");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(jPanel5, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("number format");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(jLabel1, gridBagConstraints);

        formatField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(formatField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(fontGUI, gridBagConstraints);

        thrComponentSelector.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                thrComponentSelectorStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(thrComponentSelector, gridBagConstraints);

        thrSlider.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "threshold", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
        thrSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                thrSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(thrSlider, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.weighty = 1.0;
        add(filler1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Additional initialization of components that can't be made from NetBeans GUI including:
     * set text format to default
     */
    private void postInitComponents() {
        //TODO: call updateUI from or other method dedicated to update UI (like after loading network from vna)
        formatField.setText(params.getFormat());
        
        for (int i = 0; i < downTexts.length; i++) {
            downLabels.put(i, new JLabel(downTexts[i]));
            downLabels.get(i).setFont(new java.awt.Font("Dialog", 0, 8));
        }
        downsizeSlider.setLabelTable(downLabels);
        mapComboBox.setScalarComponentsOnly(true);
        mapComboBox.setTitle("glyph size component");
        thrComponentSelector.setAddNullComponent(true);
        thrComponentSelector.setScalarComponentsOnly(true);
        thrComponentSelector.setTitle("glyph threshold component");
        fontGUI.setInitType(true);
        regularFieldDownsizeUI.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                params.setActive(false);
                downsize = regularFieldDownsizeUI.getDownsize();
                params.setDown(downsize);
                params.setActive(true);
            }
        });
    }
    
private void downsizeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_downsizeSliderStateChanged
   if (!downsizeSlider.getValueIsAdjusting())
      params.setDownsize(down[downsizeSlider.getValue()]);
}//GEN-LAST:event_downsizeSliderStateChanged

private void mapComboBoxStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_mapComboBoxStateChanged
{//GEN-HEADEREND:event_mapComboBoxStateChanged
    params.setActive(false);
   int m = mapComboBox.getComponent();
   params.setComponent(m);
   if (m >= 0)
   {
      thrSlider.setMin(inField.getData(m).getMinv());
      thrSlider.setMax(inField.getData(m).getMaxv());
      //setScaleMinMax();
   }
   params.setActive(true);
}//GEN-LAST:event_mapComboBoxStateChanged

private void thrSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_thrSliderStateChanged
   if (!thrSlider.isAdjusting())
      params.setThr(thrSlider.getVal());
}//GEN-LAST:event_thrSliderStateChanged

private void thrComponentSelectorStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_thrComponentSelectorStateChanged
{//GEN-HEADEREND:event_thrComponentSelectorStateChanged
   params.setThrComponent(thrComponentSelector.getComponent());
}//GEN-LAST:event_thrComponentSelectorStateChanged

private void formatFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_formatFieldActionPerformed
{//GEN-HEADEREND:event_formatFieldActionPerformed
   params.setFormat(formatField.getText());
}//GEN-LAST:event_formatFieldActionPerformed


   public void setInData(Field newInField, AbstractDataMappingParams mapParams)
   {
      if (newInField == null)
         return;
      if (!newInField.isStructureCompatibleWith(inField))
      {
         CardLayout cl = (CardLayout)(jPanel5.getLayout());
         if (newInField instanceof RegularField)
         {
            RegularField regularInField = (RegularField) newInField;
            if (regularInField.getDims() == null)
               return;
            int[] dims = regularInField.getDims();
            int n = 100;
            if (dims.length == 2) n = 10;
            if (dims.length == 3) n = 5;
            downsize = new int[dims.length];
            downsize[0] = (dims[0] + n - 1) / n;
            if (dims.length > 1)
               downsize[1] = (dims[1] + n - 1) / n;
            if (dims.length > 2)
               downsize[2] = (dims[2] + n - 1) / n;
            regularFieldDownsizeUI.setDownsize(downsize);
            regularFieldDownsizeUI.setVisible(true);
            downsizeSlider.setVisible(false);
            cl.show(jPanel5, "regularFieldDownsizeUI");
         }
         else 
         {
            regularFieldDownsizeUI.setVisible(false);
            downsizeSlider.setVisible(true);
            cl.show(jPanel5,  "downsizeSlider");
            int d = (newInField.getNNodes() + 99) / 100;
            params.setDownsize(d);
            for (int i = 0; i < down.length; i++)
               if (down[i] > d)
               {
                  downsizeSlider.setValue(i);
                  break;
               }
         }
      }

      inField = newInField;
      mapComboBox.setDataSchema(inField.getSchema());
      thrComponentSelector.setDataSchema(inField.getSchema());
      thrComponentSelector.setComponent(-1);
      params.setComponent(mapComboBox.getComponent());
   }


   public void setParams(Params params)
   {
      this.params = params;
      fontGUI.setParams(params.getFontParams());
   }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider downsizeSlider;
    private javax.swing.Box.Filler filler1;
    private pl.edu.icm.visnow.geometries.gui.FontGUI fontGUI;
    private javax.swing.JTextField formatField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel5;
    private pl.edu.icm.visnow.lib.gui.DataComponentSelector mapComboBox;
    private pl.edu.icm.visnow.lib.gui.DownsizeUI regularFieldDownsizeUI;
    private pl.edu.icm.visnow.lib.gui.DataComponentSelector thrComponentSelector;
    private pl.edu.icm.visnow.gui.widgets.FloatSlider thrSlider;
    // End of variables declaration//GEN-END:variables
}
