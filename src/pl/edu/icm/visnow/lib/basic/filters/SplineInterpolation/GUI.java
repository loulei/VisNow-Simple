/* VisNow
 Copyright (C) 2006-2013 University of Warsaw, ICM

 This file is part of GNU Classpath.

 GNU Classpath is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2, or (at your option)
 any later version.

 GNU Classpath is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with GNU Classpath; see the file COPYING.  If not, write to the 
 University of Warsaw, Interdisciplinary Centre for Mathematical and 
 Computational Modelling, Pawinskiego 5a, 02-106 Warsaw, Poland. 

 Linking this library statically or dynamically with other modules is
 making a combined work based on this library.  Thus, the terms and
 conditions of the GNU General Public License cover the whole
 combination.

 As a special exception, the copyright holders of this library give you
 permission to link this library with independent modules to produce an
 executable, regardless of the license terms of these independent
 modules, and to copy and distribute the resulting executable under
 terms of your choice, provided that you also meet, for each linked
 independent module, the terms and conditions of the license of that
 module.  An independent module is a module which is not derived from
 or based on this library.  If you modify this library, you may extend
 this exception to your version of the library, but you are not
 obligated to do so.  If you do not wish to do so, delete this
 exception statement from your version. */
package pl.edu.icm.visnow.lib.basic.filters.SplineInterpolation;

import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import org.apache.log4j.Logger;
import pl.edu.icm.visnow.datasets.RegularField;

public class GUI extends javax.swing.JPanel {

    private static final Logger LOGGER = Logger.getLogger(GUI.class);
    //assigned when inField is connected to GUI
    private int numDims = 3;
    private String previousCorrectCellSize = "1";
    protected Params params;

    /**
     * Set the value of params
     *
     * @param params new value of params
     */
    public void setParams(Params params) {
        this.params = params;
    }

    /** Creates new form EmptyVisnowModuleGUI */
    public GUI() {
        initComponents();
        cellField.setText(previousCorrectCellSize);

        updateActiveWidgets();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        densitySpinner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        dataComponentList = new pl.edu.icm.visnow.lib.gui.DataComponentList();
        runButton = new javax.swing.JButton();
        densityButton = new javax.swing.JRadioButton();
        dimsButton = new javax.swing.JRadioButton();
        cellButton = new javax.swing.JRadioButton();
        dims0Spinner = new javax.swing.JSpinner();
        dims1Spinner = new javax.swing.JSpinner();
        dims2Spinner = new javax.swing.JSpinner();
        cellField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        cellLabel = new javax.swing.JLabel();
        dimsLabel = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(180, 270));
        setPreferredSize(new java.awt.Dimension(220, 320));
        setLayout(new java.awt.GridBagLayout());

        densitySpinner.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        densitySpinner.setModel(new javax.swing.SpinnerNumberModel(5, 2, 50, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 191;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        add(densitySpinner, gridBagConstraints);

        jLabel1.setText(" ");
        jLabel1.setMaximumSize(new java.awt.Dimension(15, 15));
        jLabel1.setMinimumSize(new java.awt.Dimension(15, 15));
        jLabel1.setPreferredSize(new java.awt.Dimension(15, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        add(jLabel1, gridBagConstraints);

        dataComponentList.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "interpolate components", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 265;
        gridBagConstraints.ipady = 54;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 1, 0, 0);
        add(dataComponentList, gridBagConstraints);

        runButton.setText("run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 310;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 4, 0, 0);
        add(runButton, gridBagConstraints);

        buttonGroup1.add(densityButton);
        densityButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        densityButton.setSelected(true);
        densityButton.setText("density");
        densityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                densityButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 1, 0, 0);
        add(densityButton, gridBagConstraints);

        buttonGroup1.add(dimsButton);
        dimsButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        dimsButton.setText("new dimensions");
        dimsButton.setMaximumSize(new java.awt.Dimension(160, 23));
        dimsButton.setMinimumSize(new java.awt.Dimension(130, 23));
        dimsButton.setOpaque(false);
        dimsButton.setPreferredSize(new java.awt.Dimension(150, 23));
        dimsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dimsButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        add(dimsButton, gridBagConstraints);

        buttonGroup1.add(cellButton);
        cellButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cellButton.setText("new cell size");
        cellButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cellButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        add(cellButton, gridBagConstraints);

        dims0Spinner.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        dims0Spinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(100), Integer.valueOf(5), null, Integer.valueOf(1)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(dims0Spinner, gridBagConstraints);

        dims1Spinner.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        dims1Spinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(100), Integer.valueOf(5), null, Integer.valueOf(1)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 173;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        add(dims1Spinner, gridBagConstraints);

        dims2Spinner.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        dims2Spinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(100), Integer.valueOf(5), null, Integer.valueOf(1)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 67;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        add(dims2Spinner, gridBagConstraints);

        cellField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cellField.setText("1");
        cellField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cellFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 91;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        add(cellField, gridBagConstraints);

        jPanel1.setPreferredSize(new java.awt.Dimension(100, 100));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 224, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 77, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

        cellLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cellLabel.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        add(cellLabel, gridBagConstraints);

        dimsLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        dimsLabel.setMaximumSize(new java.awt.Dimension(160, 20));
        dimsLabel.setMinimumSize(new java.awt.Dimension(85, 18));
        dimsLabel.setOpaque(true);
        dimsLabel.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        add(dimsLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_runButtonActionPerformed
    {//GEN-HEADEREND:event_runButtonActionPerformed
        if (densityButton.isSelected()) params.setType(Params.DENSITY);
        if (dimsButton.isSelected()) params.setType(Params.NEWDIMS);
        if (cellButton.isSelected()) params.setType(Params.CELLSIZE);
        params.setDensity((Integer) (densitySpinner.getValue()));
        int[] dims = new int[numDims];
        JSpinner[] dimsSpinners = new JSpinner[]{dims0Spinner, dims1Spinner, dims2Spinner};

        for (int i = 0; i < numDims; i++)
            dims[i] = (Integer) dimsSpinners[i].getValue();

        params.setNewDims(dims);
        
        //text should be already correct float - tested in cellFieldActionPerfomed
        params.setCellSize(Float.parseFloat(cellField.getText()));

        if (dataComponentList.getSelectedComponents() == null
                || dataComponentList.getSelectedComponents().length < 1) {
            JOptionPane.showMessageDialog(null, "no component selected for interpolation", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        params.setComponents(dataComponentList.getSelectedComponents());
        params.fireStateChanged();
    }//GEN-LAST:event_runButtonActionPerformed

    private void densityButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_densityButtonActionPerformed
    {//GEN-HEADEREND:event_densityButtonActionPerformed
        updateActiveWidgets();
    }//GEN-LAST:event_densityButtonActionPerformed

    private void dimsButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_dimsButtonActionPerformed
    {//GEN-HEADEREND:event_dimsButtonActionPerformed
        updateActiveWidgets();
    }//GEN-LAST:event_dimsButtonActionPerformed

    private void cellButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cellButtonActionPerformed
    {//GEN-HEADEREND:event_cellButtonActionPerformed
        updateActiveWidgets();
    }//GEN-LAST:event_cellButtonActionPerformed

    private void cellFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cellFieldActionPerformed
        //test if float value typed in
        //TODO: change to common solution (widget)
        try {
            Float.parseFloat(cellField.getText());
            previousCorrectCellSize = cellField.getText();
        } catch (NumberFormatException ex) {
            cellField.setText(previousCorrectCellSize);
        }
    }//GEN-LAST:event_cellFieldActionPerformed

    private void updateActiveWidgets() {
        densitySpinner.setEnabled(densityButton.isSelected());
        dims0Spinner.setEnabled(dimsButton.isSelected());
        dims1Spinner.setEnabled(dimsButton.isSelected() && numDims > 1);
        dims2Spinner.setEnabled(dimsButton.isSelected() && numDims > 2);
        cellField.setEnabled(cellButton.isSelected());
    }

    public void setField(RegularField inField) {
        numDims = inField.getDims().length;
        LOGGER.debug(numDims);

        dataComponentList.setInField(inField);
        dataComponentList.selectAll();

        //show dims
        dimsLabel.setText("current:" + inField.getDimsString("x"));

        double cellSize = 1.0;
        if (inField.getCoords() == null) {
            cellButton.setEnabled(true);
            double[] affineNorm = inField.getAffineNorm();

            //get cell size
            cellSize = Math.pow(inField.getCellVolume(), 1.0d / inField.getDimNum());

            //show cell num
            if (affineNorm.length == 1) cellLabel.setText(String.format("current: %.4f", affineNorm[0]));
            if (affineNorm.length == 2) cellLabel.setText(String.format("current: %.4fx%.4f", affineNorm[0], affineNorm[1]));
            if (affineNorm.length == 3) cellLabel.setText(String.format("current: %.4fx%.4fx%.4f ", affineNorm[0], affineNorm[1], affineNorm[2]));
        }

        //set cell size (same as field cell size)
        previousCorrectCellSize = String.format("%.6f", cellSize);
        cellField.setText(previousCorrectCellSize);

        cellButton.setEnabled(inField.getCoords() == null);

        updateActiveWidgets();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton cellButton;
    private javax.swing.JTextField cellField;
    private javax.swing.JLabel cellLabel;
    private pl.edu.icm.visnow.lib.gui.DataComponentList dataComponentList;
    private javax.swing.JRadioButton densityButton;
    private javax.swing.JSpinner densitySpinner;
    private javax.swing.JSpinner dims0Spinner;
    private javax.swing.JSpinner dims1Spinner;
    private javax.swing.JSpinner dims2Spinner;
    private javax.swing.JRadioButton dimsButton;
    private javax.swing.JLabel dimsLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton runButton;
    // End of variables declaration//GEN-END:variables
}
